CREATE TABLE IF NOT EXISTS executable (
    executable_id bigint GENERATED BY DEFAULT AS IDENTITY,

    PRIMARY KEY (executable_id)
);

CREATE TABLE IF NOT EXISTS repository (
    repo_id bigint GENERATED BY DEFAULT AS IDENTITY,

    PRIMARY KEY (repo_id)
);

CREATE TABLE IF NOT EXISTS organization (
    organization_id bigint GENERATED BY DEFAULT AS IDENTITY,
    title char(120),
    description text, 
    location text,
    slots_per_bucket INT,

    FOREIGN KEY (organization_id) REFERENCES repository(repo_id),
    PRIMARY KEY (organization_id)
);

CREATE TABLE IF NOT EXISTS objective ( 
    objective_id bigint GENERATED BY DEFAULT AS IDENTITY,
    parent_org bigint,
    title char(120),
    description text,

    UNIQUE (parent_org, title),
    FOREIGN KEY (parent_org) REFERENCES organization(organization_id),
    FOREIGN KEY (objective_id) REFERENCES executable(executable_id),
    PRIMARY KEY (objective_id)
);

CREATE TABLE IF NOT EXISTS task (
    task_id bigint GENERATED BY DEFAULT AS IDENTITY,
    parent_org bigint, 
    subject char(10),
    number char(10),
    slot_weight INT,
    title char(120),
    description char(360), 
    
    UNIQUE (parent_org, subject, number),
    FOREIGN KEY (parent_org) REFERENCES organization(organization_id),
    FOREIGN KEY (task_id) REFERENCES executable(executable_id),
    PRIMARY KEY (task_id)
);

CREATE TABLE IF NOT EXISTS path (
    path_id bigint GENERATED BY DEFAULT AS IDENTITY, 
    parent_id bigint,

    FOREIGN KEY (parent_id) REFERENCES executable(executable_id),
    PRIMARY KEY (path_id)
);

CREATE TABLE IF NOT EXISTS in_path ( 
    parent_path bigint, 
    child_executable_id bigint,

    FOREIGN KEY (parent_path) REFERENCES path(path_id),
    FOREIGN KEY (child_executable_id) REFERENCES executable(executable_id),
    PRIMARY KEY (parent_path, child_executable_id)
);

CREATE TABLE IF NOT EXISTS bucket (
    bucket_id bigint GENERATED BY DEFAULT AS IDENTITY,

    PRIMARY KEY (bucket_id)
);

CREATE TABLE IF NOT EXISTS schedule (
    schedule_id bigint GENERATED BY DEFAULT AS IDENTITY,
    title char(120),
    head_bucket bigint,

    FOREIGN KEY (schedule_id) REFERENCES repository(repo_id),
    FOREIGN KEY (head_bucket) REFERENCES bucket(bucket_id),
    PRIMARY KEY (schedule_id)
);

CREATE TABLE IF NOT EXISTS schedule_completes (
    schedule_id bigint,
    objective_id bigint,

    FOREIGN KEY (schedule_id) REFERENCES schedule(schedule_id),
    FOREIGN KEY (objective_id) REFERENCES objective(objective_id),
    PRIMARY KEY (schedule_id, objective_id)
);

CREATE TABLE IF NOT EXISTS next_bucket ( 
    parent bigint,
    next bigint,

    FOREIGN KEY (parent) REFERENCES bucket(bucket_id),
    FOREIGN KEY (next) REFERENCES bucket(bucket_id),
    PRIMARY KEY (parent, next)
);

CREATE TABLE IF NOT EXISTS bucket_contains (
    bucket_id bigint,
    task_id bigint,

    FOREIGN KEY (bucket_id) REFERENCES bucket(bucket_id),
    FOREIGN KEY (task_id) REFERENCES task(task_id),
    PRIMARY KEY (bucket_id, task_id)
);

CREATE TABLE user_table (
    user_id bigint GENERATED BY DEFAULT AS IDENTITY,
    username char(60),

    PRIMARY KEY (user_id)
);

CREATE TABLE manages (
    user_id bigint,
    repo_id bigint,

    FOREIGN KEY (user_id) REFERENCES user_table(user_id),
    FOREIGN KEY (repo_id) REFERENCES repository(repo_id),
    PRIMARY KEY (user_id, repo_id)
);